recherche_menu:
  description: |
    Recherche et sélection de recettes équilibrées et variées pour une famille de {adults}
     adultes et {children} garçons de {children_age} ans, couvrant le repas du midi (dejeuner)
     et le repas du soirt (diner) du lundi au dimanche.
    Le repas du matin (petit-dejeuner) et les collations eventuelles
     ne sont pas prises en compte.
  expected_output: |
    Un JSON structuré de la forme:
      {
        "weekly_menu": {
          "monday":   {"lunch": {...}, "dinner": {...}},
          "tuesday":  {"lunch": {...}, "dinner": {...}},
          ...
        }
      }
    Chaque entrée "lunch" et "dinner" doit contenir:
    - title: titre de la recette
    - description: texte bref
    - calories: nombre
    on le stocke dans {menu_json} sans les ```
  output_file: "output/menu_designer_crew/menu.json"
  agent: menu_researcher

formattage_html:
  description: |
    Prendre les recettes recherchées dans {menu_json} et générer un menu hebdomadaire structuré
    avec titres de jours et repas, en HTML propre et coloré.
    Inclure des touches ludiques et indications de calories.
    Le template : 
    <!DOCTYPE html>
    <html lang="fr">
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1">
      <title>Menu Hebdomadaire</title>
      <style>
        body {
          background-color: #f5f7fa;
          font-family: 'Segoe UI', Tahoma, sans-serif;
          color: #333;
        }
        h1 {
          text-align: center;
          color: #ff7f50;
          margin-top: 20px;
        }
        table {
          width: 90%;
          margin: 20px auto;
          border-collapse: collapse;
          background-color: #fff;
          box-shadow: 0 2px 5px rgba(0,0,0,0.1);
          border-radius: 8px;
          overflow: hidden;
        }
        th, td {
          padding: 12px 15px;
          text-align: left;
        }
        th {
          background-color: #ffdab9;
          color: #333;
        }
        tr:nth-child(even) {
          background-color: #f9f9f9;
        }
        tr:hover {
          background-color: #e6f7ff;
        }
      </style>
    </head>
    <body>
      <h1>Menu de la Semaine</h1>
      <table>
        <tr><th>Jour</th><th>Déjeuner</th><th>Dîner</th></tr>
        {% for day, m in weekly_menu.items() %}
        <tr>
          <td>{{ day.capitalize() }}</td>
          <td><strong>{{ m.lunch.title }}</strong><br>{{ m.lunch.description }}<br><em>{{ m.lunch.calories }} kcal</em></td>
          <td><strong>{{ m.dinner.title }}</strong><br>{{ m.dinner.description }}<br><em>{{ m.dinner.calories }} kcal</em></td>
        </tr>
        {% endfor %}
      </table>
    </body>
    </html>

  expected_output: |
    Un fichier HTML complet présentant le menu de la semaine, en s’appuyant sur le template défini.
  agent: html_designer

liste_recettes:
  description: |
    Prendre le menu recherché et extraire la liste des titres des recettes sélectionnées
  expected_output: |
    Un JSON listant les noms des 14 recettes du menu. 
    On le stocke dans {recipe_list} sans les ```
  output_file: "output/menu_designer_crew/liste_recettes.json"
  agent: menu_researcher
  dependencies: [recherche_menu]
